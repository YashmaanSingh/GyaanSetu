{"ast":null,"code":"// index.js\nconst express = require('express');\nconst cors = require('cors');\nconst {\n  initDb\n} = require('./src/db');\nconst authRoutes = require('./src/routes/auth');\nconst lessonsRoutes = require('./src/routes/lessons');\nconst resourcesRoutes = require('./src/routes/resources');\nconst studentsRoutes = require('./src/routes/students');\nconst progressRoutes = require('./src/routes/progress');\nconst PORT = process.env.PORT || 4000;\nasync function start() {\n  const app = express();\n  await initDb(); // ensure DB is initialized\n\n  app.use(cors({\n    origin: 'http://localhost:3000',\n    // allow frontend\n    credentials: true\n  }));\n  app.use(express.json());\n\n  // routes\n  app.use('/api/auth', authRoutes);\n  app.use('/api/lessons', lessonsRoutes);\n  app.use('/api/resources', resourcesRoutes);\n  app.use('/api/students', studentsRoutes);\n  app.use('/api/progress', progressRoutes);\n\n  // basic health\n  app.get('/api/health', (req, res) => res.json({\n    ok: true\n  }));\n  app.listen(PORT, () => {\n    console.log(`Backend listening on http://localhost:${PORT}`);\n  });\n}\nstart().catch(err => {\n  console.error(err);\n  process.exit(1);\n});","map":{"version":3,"names":["express","require","cors","initDb","authRoutes","lessonsRoutes","resourcesRoutes","studentsRoutes","progressRoutes","PORT","process","env","start","app","use","origin","credentials","json","get","req","res","ok","listen","console","log","catch","err","error","exit"],"sources":["C:/Users/yashm/Documents/digital-learning-project/digital-learning-project/src/index.js"],"sourcesContent":["// index.js\nconst express = require('express');\nconst cors = require('cors');\nconst { initDb } = require('./src/db');\nconst authRoutes = require('./src/routes/auth');\nconst lessonsRoutes = require('./src/routes/lessons');\nconst resourcesRoutes = require('./src/routes/resources');\nconst studentsRoutes = require('./src/routes/students');\nconst progressRoutes = require('./src/routes/progress');\n\nconst PORT = process.env.PORT || 4000;\n\nasync function start() {\n  const app = express();\n  await initDb(); // ensure DB is initialized\n\n  app.use(cors({\n    origin: 'http://localhost:3000', // allow frontend\n    credentials: true\n  }));\n  app.use(express.json());\n\n  // routes\n  app.use('/api/auth', authRoutes);\n  app.use('/api/lessons', lessonsRoutes);\n  app.use('/api/resources', resourcesRoutes);\n  app.use('/api/students', studentsRoutes);\n  app.use('/api/progress', progressRoutes);\n\n  // basic health\n  app.get('/api/health', (req, res) => res.json({ ok: true }));\n\n  app.listen(PORT, () => {\n    console.log(`Backend listening on http://localhost:${PORT}`);\n  });\n}\n\nstart().catch(err => {\n  console.error(err);\n  process.exit(1);\n});\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAM;EAAEE;AAAO,CAAC,GAAGF,OAAO,CAAC,UAAU,CAAC;AACtC,MAAMG,UAAU,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAC/C,MAAMI,aAAa,GAAGJ,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAMK,eAAe,GAAGL,OAAO,CAAC,wBAAwB,CAAC;AACzD,MAAMM,cAAc,GAAGN,OAAO,CAAC,uBAAuB,CAAC;AACvD,MAAMO,cAAc,GAAGP,OAAO,CAAC,uBAAuB,CAAC;AAEvD,MAAMQ,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAErC,eAAeG,KAAKA,CAAA,EAAG;EACrB,MAAMC,GAAG,GAAGb,OAAO,CAAC,CAAC;EACrB,MAAMG,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEhBU,GAAG,CAACC,GAAG,CAACZ,IAAI,CAAC;IACXa,MAAM,EAAE,uBAAuB;IAAE;IACjCC,WAAW,EAAE;EACf,CAAC,CAAC,CAAC;EACHH,GAAG,CAACC,GAAG,CAACd,OAAO,CAACiB,IAAI,CAAC,CAAC,CAAC;;EAEvB;EACAJ,GAAG,CAACC,GAAG,CAAC,WAAW,EAAEV,UAAU,CAAC;EAChCS,GAAG,CAACC,GAAG,CAAC,cAAc,EAAET,aAAa,CAAC;EACtCQ,GAAG,CAACC,GAAG,CAAC,gBAAgB,EAAER,eAAe,CAAC;EAC1CO,GAAG,CAACC,GAAG,CAAC,eAAe,EAAEP,cAAc,CAAC;EACxCM,GAAG,CAACC,GAAG,CAAC,eAAe,EAAEN,cAAc,CAAC;;EAExC;EACAK,GAAG,CAACK,GAAG,CAAC,aAAa,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAKA,GAAG,CAACH,IAAI,CAAC;IAAEI,EAAE,EAAE;EAAK,CAAC,CAAC,CAAC;EAE5DR,GAAG,CAACS,MAAM,CAACb,IAAI,EAAE,MAAM;IACrBc,OAAO,CAACC,GAAG,CAAC,yCAAyCf,IAAI,EAAE,CAAC;EAC9D,CAAC,CAAC;AACJ;AAEAG,KAAK,CAAC,CAAC,CAACa,KAAK,CAACC,GAAG,IAAI;EACnBH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;EAClBhB,OAAO,CAACkB,IAAI,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}